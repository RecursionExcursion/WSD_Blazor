@code {
    [Parameter]
    public ProcessModel? Model { get; set; }

    DataManager dataManager = DataManager.Instance;


    private List<ProcessModel.DeployableParams>? Params { get; set; }

    private bool ManageExePaths { get; set; } = false;

    public string ExeLabel { get; } = "Exe:";
    public string UrlLabel { get; } = "Url:";

    protected override void OnInitialized()
    {
        Params = Model.DeployParametersList;
    }

    private void AddProcessClick()
    {

        var newParam = new ProcessModel.DeployableParams();
        newParam.Type = ProcessType.Url;
        Params.Add(newParam);
    }

    private void DeleteClick(ProcessModel.DeployableParams p)
    {
        Params.Remove(p);
    }

    private bool IsUrl(ProcessModel.DeployableParams p) => p.Type == ProcessType.Url;
    private bool IsExe(ProcessModel.DeployableParams p) => p.Type == ProcessType.Exe;

    private void SetUrl(ProcessModel.DeployableParams p) => p.Type = ProcessType.Url;
    private void SetExe(ProcessModel.DeployableParams p) => p.Type = ProcessType.Exe;


    private void SwitchType(ProcessModel.DeployableParams p) => p.Type = p.Type == ProcessType.Exe ? ProcessType.Url : ProcessType.Exe;


    private bool IsExeURL(string exe)
    {
        if (string.IsNullOrEmpty(exe))
        {
            return false;
        }
        return Regex.IsMatch(exe, "^(http:|https:)");
    }

    private void TogleExecutablesManager()
    {
        ManageExePaths = !ManageExePaths;
        StateHasChanged();
    }

    public void AddExeClick()
    {
        dataManager.AddExecutable("Name", "Path");
        StateHasChanged();
    }

    public void DeleteExe(Executable exe)
    {
        dataManager.DeleteExecutable(exe);
        StateHasChanged();
    }

    public void SaveExe()
    {
        dataManager.SyncData();
        StateHasChanged();
        TogleExecutablesManager();
    }
}

<div>
    <div class="divrow">
        <button class="btn-primary" @onclick="TogleExecutablesManager">Manage Executables</button>
        <button class="btn-primary" @onclick="AddProcessClick">Add Process</button>
    </div>

    <!-- Executable UI -->
    <div hidden="@(!ManageExePaths)">
        <div>

            <button class="btn-primary" @onclick="AddExeClick">Add Executable</button>

            <div>
                @foreach (var e in dataManager.State.Executables)
                {
                    <div>
                        <label>Name:</label>
                        <input @bind:event="oninput" @bind=e.Name />
                        <label>Path:</label>
                        <input @bind:event="oninput" @bind=e.Path />
                        <button class="btn-primary" @onclick="() => DeleteExe(e)">Delete</button>
                    </div>
                }
            </div>

            <button onclick="@SaveExe">Save</button>

        </div>
    </div>

    <!-- Process UI -->
    <div>

        @foreach (var p in Params)
        {
            <div>
                <div>
                    <input type="radio" id="exe" name="radioOptions" checked="@IsExe(p)" @onchange="()=>SwitchType(p)" />
                    <label for="option1">Exe</label>

                    <input type="radio" id="url" name="radioOptions" checked="@IsUrl(p)" @onchange="()=>SwitchType(p)" />
                    <label for="option2">Url</label>
                </div>
            </div>

            <div class="divrow">

                <label>
                    @if (IsExe(p))
                    {
                        @ExeLabel
                    }
                    else
                    {
                        @UrlLabel
                    }
                </label>

                <div>

                    <select hidden="@(!IsExe(p))" @bind=p.Exe>
                        @foreach (var exe in dataManager.State.Executables)
                        {
                            <option value="@exe.Path">@exe.Name</option>
                        }
                    </select>

                    <input hidden="@(IsExe(p))" @bind:event="oninput" @bind=p.Exe />

                </div>

                <div hidden="@(!IsExe(p))" class="hide">
                    <label>Args:</label> <input @bind=p.Args />
                </div>

                <button class="btn-primary" @onclick="() => DeleteClick(p)">Delete</button>
            </div>
        }
    </div>
</div>