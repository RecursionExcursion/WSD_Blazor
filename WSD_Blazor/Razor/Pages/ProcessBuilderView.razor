@page "/process/{keyJson?}"

@code {
    [Parameter]
    public string? KeyJson { get; set; }

    private ProcessModel Model { get; set; }
    private DataManager dataManager = DataManager.Instance;
    private ProcessModel? initialModelCopy;

    private bool isNewModel = false;
    private string? initalKey;

    protected override void OnInitialized()
    {
        if (KeyJson != null)
        {
            string? key = JsonSerializer.Deserialize<string>(KeyJson);
            initalKey = key;

            Model = dataManager.State.ProcessModels[key ?? throw new ArgumentNullException()];
            initialModelCopy = new()
                {
                    Name = Model.Name,
                    DeployParametersList = Model.DeployParametersList
                };
        }
        else
        {
            Model = new();
            isNewModel = true;
        }
    }

    [Inject]
    private NavigationManager? NavigationManager { get; set; }
    private void NavigateHome() => NavigationManager?.NavigateTo("/");

    private void BackClick() => NavigateHome();

    private void DeleteClick()
    {
        if (initialModelCopy != null)
        {
            dataManager.RemoveProcess(initialModelCopy);
            NavigateHome();
        }
    }
}

<div class="process-builder">
    <div class="btn-container">
        <button class="btn-primary" @onclick="BackClick">Back</button>
        @if (initialModelCopy != null)
        {
            <button class="btn-primary" @onclick="DeleteClick">Delete</button>
        }
    </div>

    <div class="centered-content">

        <div class="divrow">
            <label>Name: </label><input @bind=Model.Name autocomplete="nope" />
        </div>

        <ProcessListComp Model=Model IsNewModel=@isNewModel InitialKey=@initalKey/>

       
    </div>
</div>
