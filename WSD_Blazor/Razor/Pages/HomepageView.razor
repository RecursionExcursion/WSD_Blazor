@page "/list"

@code {
    [Inject]
    private NavigationManager? NavigationManager { get; set; }

    List<ProcessModel> processModels = DataManager.Instance.State.ProcessModels.Values.ToList();

    private void DeployClick(ProcessModel process)
    {
        ProcessManager.ExecuteProcesses(process);
    }

    private void EditClick(ProcessModel model) => SendModelToPage(model);

    private void NewProcessClick() => SendModelToPage();

    private void SendModelToPage(ProcessModel model)
    {
        //Is this ths best way? Should I rethink the datamanagment. Use a map and pass keys? Why not?
        //This would prevent me having to serialize an object into json
        string serializedModel = JsonSerializer.Serialize(model.Name);
        string json = HttpUtility.UrlEncode(serializedModel);
        NavigationManager.NavigateTo($"/process/{json}");
    }
    private void SendModelToPage()
    {
        //Is this ths best way? Should I rethink the datamanagment. Use a map and pass keys? Why not?
        //This would prevent me having to serialize an object into json
        NavigationManager.NavigateTo($"/process");
    }
}

<div class="home-page-wrapper centered-content">
    <h1 class="header">Processes</h1>
    <div class="buffer">
        <button @onclick="NewProcessClick" class="btn-primary">New Process</button>
    </div>
    <div class="listborder">
        <ul>
            @foreach (var p in processModels)
            {
                <li>
                    @p.Name
                    <button class="btn-primary" @onclick="() => DeployClick(p)">Deploy</button>
                    <button class="btn-primary" @onclick="() => EditClick(p)">Edit</button>
                </li>
            }
        </ul>
    </div>
</div>
